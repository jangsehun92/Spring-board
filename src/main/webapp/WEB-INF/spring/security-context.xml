<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"  
    xmlns:beans="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/security  
    http://www.springframework.org/schema/security/spring-security.xsd"> 
     
    <http auto-config="true" use-expressions="true">  
        <intercept-url pattern="/articles" access="permitAll" />
        <intercept-url pattern="/article" method="GET" access="permitAll" />
        <intercept-url pattern="/article" method="POST" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/article" method="PUT" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/article" method="DELETE" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		<form-login login-page="/login" 
					username-parameter="email"
					password-parameter="password"/>
		<!-- <csrf disabled="true"/> -->
    </http>  
    
    <!-- test -->
    <authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="admin" authorities="hasRole(ROLE_ADMIN)" />
				<user name="user" password="user" authorities="hasRole(ROLE_ADMIN)" />
			</user-service>
		</authentication-provider>
	</authentication-manager>  
	
	<!-- DB -->
	<authentication-manager>
		<authentication-provider>
		<jdbc-user-service
		data-source-ref="dataSource"
		role-prefix="ROLE_"
		users-by-username-query="select email password, enabled from member_table where email = ?"
		authorities-by-username-query="select email authority from authority_table where email = ?"
		/>
		</authentication-provider>
	</authentication-manager>  
	
	
    
</beans:beans>  