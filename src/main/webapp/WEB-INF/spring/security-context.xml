<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
		
    <http auto-config="true" use-expressions="true"  >
        <intercept-url pattern="/articles" access="permitAll" />
        <intercept-url pattern="/account" method="GET" access="permitAll" />
        <intercept-url pattern="/account" method="POST" access="permitAll" />
        <intercept-url pattern="/account" method="PATCH" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/account/edit" method="GET" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/account/passwordChange" method="GET" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/account/passwordChange" method="POST" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/article" method="GET" access="permitAll" />
        <intercept-url pattern="/articles/{category}/create" method="GET" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <intercept-url pattern="/article" method="POST" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/article/image" method="POST" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/article/edit/{id}" method="GET" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/article" method="PATCH" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
        <intercept-url pattern="/article" method="DELETE" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		
		<form-login login-page="/login"
					username-parameter="email"
					password-parameter="password"
					authentication-failure-handler-ref="loginFailureHandler"
					authentication-success-handler-ref="loginSuccessHandler"/>
		
		<logout
			logout-url="/logout"
			logout-success-url="/"
			delete-cookies="JSESSIONID"
			invalidate-session="true" />
		
		<session-management invalid-session-url="/login">
			<concurrency-control max-sessions="1" expired-url="/login" />
		</session-management>
		<access-denied-handler error-page="/login"/>
		<csrf disabled="false"/>
		
    </http>
    
    <context:component-scan base-package="jsh.project.board" />
    
    <!--  bean 선언 -->
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>    
	<beans:bean id="userService" class="jsh.project.board.account.security.CustomUserDetailsService"/>
	<beans:bean id="authenticationProvider" class="jsh.project.board.account.security.CustomAuthenticationProvider"/>
	<beans:bean id="loginFailureHandler" class="jsh.project.board.account.security.CustomAuthenticationFailureHandler"/>
	<beans:bean id="loginSuccessHandler" class="jsh.project.board.account.security.CustomAuthenticationSuccessHandler">
		<beans:property name="email" value="email"/>
		<beans:property name="defaultUrl" value="/"/>
	</beans:bean>
	
	<!-- DB를 사용하여 사용자 정보를 가져온다 -->
	<authentication-manager>
		<authentication-provider ref="authenticationProvider"/>
		<authentication-provider user-service-ref="userService">
			<password-encoder ref="passwordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
</beans:beans>
